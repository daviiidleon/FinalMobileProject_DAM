/* src/app/page/goals/goals.page.scss */

/* --- Variables CSS en línea para la página de Metas --- */
:host {
  --page-background: #f8f9fa;
  --card-background: #ffffff;
  --border-color: #e9ecef;
  --main-text-color: #343a40;
  --secondary-text-color: #6c757d;
  --sidebar-background: #f0f0f0;
  --sidebar-text: #343a40;
  --shadow-light: 0 2px 8px rgba(0, 0, 0, 0.04);
  --shadow-subtle: 0 1px 3px rgba(0,0,0,0.03);
  --shadow-medium: 0 4px 12px rgba(0, 0, 0, 0.08);

  --ion-color-primary: #007bff;
  --ion-color-primary-shade: #006bdf;
  --ion-color-primary-tint: #e6f2ff;
  --ion-color-primary-contrast: #ffffff;
  --ion-color-danger: #dc3545;
  --ion-color-danger-shade: #c12f3d;
  --ion-color-warning: #ffc107;
  --ion-color-warning-shade: #e0a800;
  --ion-color-light: #f8f9fa;
  --ion-color-step-50: #f0f2f5;
  --ion-color-step-100: #e9ecef;
  --ion-color-medium: #92949c;

  --label-color: var(--secondary-text-color);
  --input-border-color: #d1d5db;

  --form-item-background: var(--card-background);
  --form-item-border: 1px solid var(--border-color);
  --form-item-shadow: var(--shadow-subtle);
  --form-input-border-radius: 8px;

  // New variables for aesthetic improvements
  --card-border-radius: 10px;
  --shadow-card: 0 4px 15px rgba(0, 0, 0, 0.08);
  --shadow-input-focus: 0 0 0 3px rgba(var(--ion-color-primary-rgb), 0.2);

  --progress-bar-height: 10px;
  --progress-bar-border-radius: 5px;
}

/* --- Dark Theme --- */
body.dark-theme {
  --page-background: #1a1a1a;
  --card-background: #2a2a2a;
  --main-text-color: #e0e0e0;
  --label-color: #bbbbbb;
  --input-border-color: #444444;
  --small-text-color: #aaaaaa;
  --hint-text-color: #999999;
  --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.3);
  --shadow-subtle: 0 1px 3px rgba(0,0,0,0.1);
  --shadow-medium: 0 6px 18px rgba(0, 0, 0, 0.4);
  --shadow-card: 0 6px 20px rgba(0, 0, 0, 0.5); // More pronounced for dark cards
  --shadow-input-focus: 0 0 0 3px rgba(var(--ion-color-primary-rgb), 0.3);

  ion-item {
    --background: #333333;
  }
  ion-input, ion-select, ion-textarea, ion-datetime {
    --background: #3a3a3a;
    &.ion-readonly {
      --background: #444444;
    }
  }

  .goal-actions {
    .add-button {
      --background: rgba(var(--ion-color-primary-rgb), 0.1) !important;
      --color: var(--ion-color-primary) !important;
      --border-color: var(--ion-color-primary) !important;
      &:hover {
        --background: rgba(var(--ion-color-primary-rgb), 0.2) !important;
      }
    }
    .edit-button {
      --background: none !important;
      --color: var(--ion-color-primary) !important;
      --border-color: var(--ion-color-primary) !important;
      &:hover {
        --background: rgba(var(--ion-color-primary-rgb), 0.1) !important;
      }
    }
    ion-button[color="danger"] {
      --background: var(--ion-color-danger) !important;
      --color: var(--ion-color-primary-contrast) !important;
      --border-color: var(--ion-color-danger) !important;
      &:hover {
        --background: var(--ion-color-danger-shade) !important;
      }
    }
  }

  /* REVERTED: Dark Theme modal specific styles to previous working version */
  ion-modal {
    .form-item {
      --background: var(--form-item-background) !important;
      border: none !important; // REMOVED BORDER FOR DARK THEME
      box-shadow: var(--form-item-shadow) !important;

      // Ensure inputs/selects/datetime also have no borders in dark theme
      ion-input, ion-select, ion-datetime {
        --border-color: transparent !important;
        --border-width: 0 !important;
        border: none !important; // Fallback
        --background: var(--ion-color-step-50) !important; // Restore step background for dark inputs
      }

      // Dark theme specific for ion-datetime-button (now for selected-date-display span)
      .selected-date-display {
        color: var(--main-text-color) !important; /* Ensure button text is light */
        background: var(--ion-color-step-50) !important; // Restore step background for dark date display
      }
    }
    .form-item ion-label {
      color: var(--secondary-text-color) !important;
    }
    .form-item ion-input,
    .form-item ion-select,
    .form-item ion-datetime {
      --color: var(--main-text-color) !important; // Ensure text color is light
    }
    .form-item ion-note {
      color: var(--ion-color-danger) !important; // Error notes stay red
    }
  }
}

/* --- Dashboard Layout and General Styles --- */
ion-content {
  --background: var(--page-background);
}

ion-header {
  --background: var(--card-background);
  border-bottom: 1px solid var(--border-color);
  box-shadow: 0 1px 4px rgba(0,0,0,0.03);
}

.dashboard-layout {
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 100%;

  @media (max-width: 768px) {
    flex-direction: column;
  }
}

.first-content {
  width: 15%;
  background-color: var(--sidebar-background);
  color: var(--sidebar-text);
  @media (max-width: 768px) {
    width: 100%;
  }
}

.main-content {
  flex-grow: 1;
  padding: 20px;
  overflow-y: auto;
  box-sizing: border-box;
}

.goals-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-right: 10px;

  .page-title {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 5px;
    color: var(--main-text-color);
    text-align: left;

    p {
      color: var(--secondary-text-color);
      font-size: 14px;
      font-weight: normal;
      margin-top: 5px;
    }
  }
}

.goals-actions-top {
  ion-button {
    --background: var(--ion-color-primary);
    --color: var(--ion-color-primary-contrast);
    height: auto;
    --border-radius: 8px;
    font-weight: 600;
    text-transform: none;
    padding: 10px 18px;
    display: flex;
    align-items: center;


    &:hover {
      --background: var(--ion-color-primary-shade);
    }
    ion-icon {
      margin-right: 8px;
      font-size: 18px;
    }
  }
}

.skeleton-actions-top {
  display: flex;
  align-items: center;
  .create-goal-button {
    height: 40px;
    width: 160px;
    border-radius: 8px;
  }
}

/* Updated Empty State Styles */
.empty-goals {
  text-align: center;
  padding: 30px; /* Reduced from 40px */
  color: var(--secondary-text-color);
  border-top: 1px solid var(--border-color); /* Kept for separation from header area */
  margin-top: 30px; /* Adjusted margin */
  /* Added styles for a more contained, card-like look */
  max-width: 600px; /* Example max-width, adjust as needed */
  margin-left: auto; /* Center horizontally */
  margin-right: auto; /* Center horizontally */
  background-color: var(--card-background); /* Give it a card background */
  border-radius: var(--card-border-radius); /* Use existing card border radius */
  box-shadow: var(--shadow-light); /* Apply a light shadow to make it a distinct block */
  display: flex; /* Use flexbox to center content vertically within the card */
  align-items: center;
  justify-content: center;
  min-height: 250px; /* Give it a minimum height, adjust if needed */
  flex-direction: column; /* Ensure content stacks vertically */
}

.empty-state {
  text-align: center;
  color: var(--secondary-text-color);
  padding: 0 20px; /* Add some horizontal padding inside */


  ion-icon {
    font-size: 2.5em; /* Slightly smaller icon */
    margin-bottom: 8px; /* Reduced margin */
    color: var(--ion-color-medium);
  }

  h2 {
    margin-top: 0;
    margin-bottom: 8px; /* Reduced margin */
    font-weight: bold;
    color: var(--main-text-color);
    font-size: 1.5em; /* Slightly smaller heading */
  }

  p {
    margin-bottom: 15px; /* Reduced margin */
    font-size: 0.95em; /* Slightly smaller paragraph text */
    max-width: 400px; /* Constrain paragraph width for better readability */
    margin-left: auto;
    margin-right: auto;
  }

  ion-button {
    --background: var(--ion-color-primary);
    --color: var(--ion-color-primary-contrast);
    --border-radius: 8px;
    font-weight: 600;
    text-transform: none;
    padding: 8px 16px; /* Slightly less padding to make the button more compact */
    height: auto; /* Allow button height to adjust based on padding */
    font-size: 0.9em; /* Slightly smaller button text */

    &:hover {
      --background: var(--ion-color-primary-shade);
    }
  }
}

.goals-grid {
  .goals-card-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .goal-card {
    background-color: var(--card-background);
    border-radius: var(--card-border-radius);
    box-shadow: var(--shadow-card);
    padding: 24px; // Slightly more padding
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: auto;
    border: 1px solid var(--border-color);
    transition: transform 0.2s ease, box-shadow 0.2s ease;

    &:hover {
      transform: translateY(-5px);
      box-shadow: var(--shadow-medium);
    }
  }

  .goal-header {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    font-weight: 600;
    font-size: 18px;
    color: var(--main-text-color);

    h3 {
      font-size: 1.3em;
      margin-right: 12px;
      margin-bottom: 0;
      flex-grow: 1;
      color: var(--main-text-color);
    }

    ion-icon {
      font-size: 20px;
      color: var(--ion-color-primary);
    }

    span {
      font-size: 13px;
      color: var(--secondary-text-color);
      margin-left: 8px;
    }
  }

  .goal-body {
    margin-bottom: 20px;
    flex-grow: 1;

    p {
      margin-bottom: 10px;
      font-size: 15px;
      color: var(--main-text-color);

      strong {
        font-weight: 600;
      }
    }

    .progress-container {
      margin-top: 18px;
      margin-bottom: 12px;
      display: flex;
      align-items: center;

      ion-progress-bar {
        flex-grow: 1;
        --background: var(--ion-color-step-100);
        --progress-background: var(--ion-color-primary);
        height: var(--progress-bar-height);
        border-radius: var(--progress-bar-border-radius);
        margin-right: 10px;
      }

      .progress-percentage {
        min-width: 45px;
        text-align: right;
        font-size: 13px;
        color: var(--secondary-text-color);
        font-weight: 500;
      }
    }

    .deadline-passed {
      color: var(--ion-color-danger);
      font-size: 12px;
      margin-top: 8px;
      font-weight: 500;
    }
  }

  .goal-actions {
    display: flex;
    gap: 8px;
    justify-content: flex-end;
    flex-wrap: nowrap;
    align-items: center;
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px dashed var(--border-color);

    ion-button {
      font-size: 12.5px;
      --padding-start: 10px;
      --padding-end: 10px;
      --border-radius: 6px;
      height: 36px;
      font-weight: 600;
      text-transform: none;
      --box-shadow: none;
      ion-icon {
        margin-right: 5px;
        font-size: 15px;
      }
    }

    .add-button, .edit-button, ion-button[color="danger"] {
      transition: background 0.2s ease, color 0.2s ease, border-color 0.2s ease;
    }

    .add-button {
      --background: var(--ion-color-primary);
      --color: var(--ion-color-primary-contrast);
      box-shadow: var(--shadow-subtle);

      &:hover {
        --background: var(--ion-color-primary-shade);
      }
    }

    .edit-button {
      --background: var(--card-background);
      --color: var(--ion-color-primary);
      --border-width: 1px;
      --border-style: solid;
      --border-color: var(--ion-color-primary);
      box-shadow: var(--shadow-subtle);

      &:hover {
        --background: var(--ion-color-primary);
        --color: var(--ion-color-primary-contrast);
      }
    }

    ion-button[color="danger"] {
      --background: var(--ion-color-danger);
      --color: var(--ion-color-primary-contrast);
      box-shadow: var(--shadow-subtle);

      &:hover {
        --background: var(--ion-color-danger-shade);
      }
    }
  }
}

/* --- Modal specific styles (REVERTED TO PREVIOUS VERSION) --- */
ion-modal {
  --width: 30%;
  --height: 74%; // Adjusted to auto to better fit content, but keep max-height
  --border-radius: 8px;
  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);

  // Mobile responsiveness for modals
  @media (max-width: 768px) {
    --width: 95%; // Almost full width on mobile
    --height: auto; // Let height adjust to content
    --max-height: 95%; // Ensure it doesn't overflow
    --border-radius: 12px; // Match overall mobile aesthetic
  }

  // Adjust for smaller desktop screens if needed, otherwise stick to 30%
  @media (min-width: 769px) and (max-width: 1024px) {
    --width: 45%;
  }

  ion-header.ion-no-border {
    ion-toolbar {
      --background: var(--card-background);
      --color: var(--main-text-color);
      border-bottom: 1px solid var(--border-color);
      padding: 0 16px;
      ion-title {
        text-align: left;
        font-weight: 600;
        font-size: 1.15em;
      }
      ion-buttons[slot="end"] ion-button {
        --background: transparent;
        --color: var(--main-text-color);
        font-size: 1.5em;
        height: 48px;
        width: 48px;
      }
    }
  }

  ion-content {
    --background: var(--page-background);
    height: 100%; // Essential: Make ion-content take full available height
    overflow-y: auto; // Essential: Allow scrolling if content exceeds height
    box-sizing: border-box; // Ensure padding is included in height calculation
    padding-top: 16px; // Adjust general padding for content area
    padding-bottom: 16px;
  }

  .form-list {
    background: transparent;
    padding: 0;
    margin: 0;
    width: 100%;
    box-sizing: border-box;
  }

  .form-item {
    --background: var(--form-item-background);
    border: none; // REMOVED SOLID BORDER from the container
    border-radius: var(--form-input-border-radius);
    box-shadow: var(--form-item-shadow);
    margin-bottom: 15px;
    transition: all 0.2s ease-in-out;
    width: 100%;
    box-sizing: border-box;

    /* Explicitly reset internal Ionic item paddings to ensure visibility */
    --padding-start: 16px;
    --padding-end: 16px;
    --padding-top: 8px;
    --padding-bottom: 8px;
    --inner-padding-end: 0;
    --inner-border-width: 0; // Remove default inner border

    ion-label {
      font-weight: 500;
      color: var(--secondary-text-color);
      font-size: 0.9em;
    }

    // Apply consistent styling to all form controls within an item
    ion-input,
    ion-select {
      --border-color: transparent; // Make any internal border color transparent
      --border-width: 0; // Set internal border width to 0
      border: none; // Fallback for good measure (though Ionic components often use variables)

      --padding-top: 0px;
      --padding-bottom: 0px;
      --padding-start: 0;
      --padding-end: 0;
      color: var(--main-text-color);
      font-size: 1.05em;
      min-height: 44px; /* Ensure a minimum touch target height */
    }

    // Specific styling for the selected date display span
    .selected-date-display {
      display: block;
      width: 100%;
      height: 44px; /* Give it a consistent height */
      line-height: 44px; /* Vertically center the text */
      text-align: left;
      padding: 0;
      color: var(--main-text-color);
      font-size: 1.05em;
      cursor: pointer; /* Indicate it's clickable */
      // Optionally add background or border if you want it to look like an input
      // background: var(--ion-color-step-50);
      // border: 1px solid var(--input-border-color);
      // border-radius: var(--form-input-border-radius);
    }

    // Specific styling for embedded ion-datetime
    ion-datetime {
      width: 100%;
      // Ensure it takes full width within the item
      --background: var(--form-item-background); // Match item background
      --border-radius: var(--form-input-border-radius); // Match item border-radius
      margin-top: 10px; // Give some space below the label/display span
      box-shadow: var(--shadow-subtle); // Add a subtle shadow if desired
      padding: 0; // Remove internal padding if ion-item is already handling it
      // Ensure it renders correctly for month-year presentation
      &.datetime-month-year { // Note: This class is for month-year, your goals picker is 'date'
        width: 100%;
        // You might need more specific CSS variables if you want to customize the internal appearance
        // e.g., --background, --color, --border-color for internal buttons/selectors
      }
    }


    // Re-adjust floating label for the new setup (label + span)
    ion-label[position="floating"] + .selected-date-display {
      margin-top: 15px; /* Adjust this value to match your desired spacing */
    }

    ion-note[color="danger"] {
      font-size: 0.75em;
      padding-left: 16px;
      padding-right: 16px;
      margin-top: 5px;
      display: block; // Ensure it takes its own line
    }
  }

  ion-button[type="submit"] {
    --border-radius: 8px;
    font-weight: 600;
    height: 48px;
    font-size: 1em;
    box-shadow: var(--shadow-medium);
    margin-top: 25px;

    --background: var(--ion-color-primary);
    --color: var(--ion-color-primary-contrast);

    &:hover {
      --background: var(--ion-color-primary-shade);
    }
  }
}

/* --- Skeleton Styles --- */
.skeleton {
  background: linear-gradient(90deg, var(--border-color) 25%, #e0e0e0 50%, var(--border-color) 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
  border-radius: 4px;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

.h-4 { height: 1rem; }
.h-6 { height: 1.5rem; }
.h-8 { height: 2rem; }
.h-10 { height: 2.5rem; }

.w-full { width: 100%; }
.w-3\/4 { width: 75%; }
.w-2\/3 { width: 66.666%; }
.w-1\/2 { width: 50%; }
.w-1\/4 { width: 25%; }
.w-20 { width: 5rem; }
.w-32 { width: 8rem; }
.w-40 { width: 10rem; }
.w-48 { width: 12rem; }
.w-60 { width: 15rem; }
.w-80 { width: 20rem; }

.mb-1 { margin-bottom: 0.25rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-3 { margin-bottom: 0.75rem; }
.mb-4 { margin-bottom: 1rem; }
.ml-2 { margin-left: 0.5rem; }

.skeleton-goal-card {
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow-light);
  border-radius: 8px;
  .skeleton-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 15px;
  }
  .skeleton-progress-container {
    display: flex;
    align-items: center;
    width: 100%;
  }
}
